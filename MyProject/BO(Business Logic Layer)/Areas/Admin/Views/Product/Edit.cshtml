@model DAL_Data_Access_Layer_.EF.Products

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_EditLayout.cshtml";
}

<h2>Edit</h2>

<h1>EDIT USERS</h1>
<div class="row" style="border:3px solid #ccc;width:99%;margin-left:5px;">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                UPDATE USERS
            </div>
            <div class="panel-body">
                <div class="row">
                    <div class="col-lg-6">

                        @using (Html.BeginForm("Edit","Product",FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()

                            <div class="form-horizontal">
                                <h4>Products</h4>
                                <hr />
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.Id)

                                <div class="form-group">
                                    @Html.LabelFor(model => model.CategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
                                    
                                        @Html.TextBoxFor(model => model.CategoryID, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                                    
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Slug, htmlAttributes: new { @class = "control-label col-md-2" })
                                    
                                        @Html.TextBoxFor(model => model.Slug, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Slug, "", new { @class = "text-danger" })
                                    
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Detail, htmlAttributes: new { @class = "control-label col-md-2" })
                                    
                                        @Html.TextBoxFor(model => model.Detail, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Detail, "", new { @class = "text-danger" })
                                    
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Trending, htmlAttributes: new { @class = "control-label col-md-2" })
                                    
                                        @Html.TextBoxFor(model => model.Trending, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Trending, "", new { @class = "text-danger" })
                                    
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        
                                            @Html.CheckBoxFor(model => model.Status)
                                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                        
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.NumberViews, htmlAttributes: new { @class = "control-label col-md-2" })
                                   
                                        @Html.TextBoxFor(model => model.NumberViews, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.NumberViews, "", new { @class = "text-danger" })
                                    
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                                    
                                        @Html.TextBoxFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                                    
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.MetaKey, htmlAttributes: new { @class = "control-label col-md-2" })
                                    
                                        @Html.TextBoxFor(model => model.MetaKey, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.MetaKey, "", new { @class = "text-danger" })
                                    
                                </div>



                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="UPDATE" class="btn btn-default" />
                                    </div>
                                </div>
                            </div>
                        }

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
